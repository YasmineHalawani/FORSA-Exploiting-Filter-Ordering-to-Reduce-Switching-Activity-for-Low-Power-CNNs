function [switching, sumOfSwitching_before] = switching_calculation(converted_char2matrix)

switching = zeros(1,size(converted_char2matrix,2));

for k = 1: size(converted_char2matrix,2) - 1 % k changes after swapping
    matching = zeros(1, size(converted_char2matrix,2)); 
    for i = 1: size(converted_char2matrix,2) - k  %number of filters - 1 since each col is a filter
        matching_per_col = zeros(size(converted_char2matrix,1), 1);
        for j = 1: size(converted_char2matrix,1) % num of rows
            matching_per_col(j,1) = sum(eq(converted_char2matrix{j,k},converted_char2matrix{j,k+i}));
        end
        matching(1,i+k) =  sum(matching_per_col);
    end
%     k;
    %8 for 8 bits * number of elements per column to get the maximum value
    switching_per_iteration = (8 * size(converted_char2matrix,1)) - matching; 
    switching(1,k+1) = switching_per_iteration(1,k+1);
end

sumOfSwitching_before = sum(switching);

end

